{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ASO_ESFOT\\\\frontend\\\\src\\\\pages\\\\VerificarCuenta.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerificarCuenta = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [mensaje, setMensaje] = useState('');\n  const [verificado, setVerificado] = useState(false);\n  const handleVerificar = async () => {\n    setMensaje('Verificando...');\n    try {\n      const res = await fetch(`http://localhost:5000/api/usuarios/verificar/${token}`);\n      const text = await res.text();\n      setMensaje(text);\n      if (res.ok) setVerificado(true);\n    } catch {\n      setMensaje('Error al verificar la cuenta.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificaci\\xF3n de cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !verificado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleVerificar,\n        children: \"Confirmar cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3 text-success\",\n      children: \"\\xA1Cuenta verificada! Ya puedes iniciar sesi\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificarCuenta, \"fo5Bkna6FXZhpbCSBkooadR+T54=\", false, function () {\n  return [useParams];\n});\n_c = VerificarCuenta;\nexport default VerificarCuenta;\nvar _c;\n$RefreshReg$(_c, \"VerificarCuenta\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","VerificarCuenta","_s","token","mensaje","setMensaje","verificado","setVerificado","handleVerificar","res","fetch","text","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ASO_ESFOT/frontend/src/pages/VerificarCuenta.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst VerificarCuenta = () => {\r\n  const { token } = useParams();\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [verificado, setVerificado] = useState(false);\r\n\r\n  const handleVerificar = async () => {\r\n    setMensaje('Verificando...');\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/usuarios/verificar/${token}`);\r\n      const text = await res.text();\r\n      setMensaje(text);\r\n      if (res.ok) setVerificado(true);\r\n    } catch {\r\n      setMensaje('Error al verificar la cuenta.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <h2>Verificación de cuenta</h2>\r\n      {!verificado ? (\r\n        <>\r\n          <button className=\"btn btn-success\" onClick={handleVerificar}>\r\n            Confirmar cuenta\r\n          </button>\r\n          {mensaje && <p className=\"mt-3\">{mensaje}</p>}\r\n        </>\r\n      ) : (\r\n        <p className=\"mt-3 text-success\">¡Cuenta verificada! Ya puedes iniciar sesión.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificarCuenta;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCH,UAAU,CAAC,gBAAgB,CAAC;IAC5B,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgDP,KAAK,EAAE,CAAC;MAChF,MAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;MAC7BN,UAAU,CAACM,IAAI,CAAC;MAChB,IAAIF,GAAG,CAACG,EAAE,EAAEL,aAAa,CAAC,IAAI,CAAC;IACjC,CAAC,CAAC,MAAM;MACNF,UAAU,CAAC,+BAA+B,CAAC;IAC7C;EACF,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B,CAACZ,UAAU,gBACVR,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEX,eAAgB;QAAAM,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRd,OAAO,iBAAIN,OAAA;QAAGe,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEV;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAC7C,CAAC,gBAEHpB,OAAA;MAAGe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,eAAe;EAAA,QACDL,SAAS;AAAA;AAAAwB,EAAA,GADvBnB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}